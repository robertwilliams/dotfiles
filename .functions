# Determine size of a file or total size of a directory
function fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* *;
	fi;
}

# Create a git.io short URL
function gitio() {
	if [ -z "${1}" -o -z "${2}" ]; then
		echo "Usage: \`gitio slug url\`";
		return 1;
	fi;
	curl -i http://git.io/ -F "url=${2}" -F "code=${1}";
}

# Syntax-highlight JSON strings or files
# Usage: `json '{"foo":42}'` or `echo '{"foo":42}' | json`
function json() {
	if [ -t 0 ]; then # argument
		python -mjson.tool <<< "$*" | pygmentize -l javascript;
	else # pipe
		python -mjson.tool | pygmentize -l javascript;
	fi;
}

# `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
# the `.git` directory, listing directories first. The output gets piped into
# `less` with options to preserve color and line numbers, unless the output is
# small enough for one screen.
function tre() {
	tree -aC -I '.git|node_modules|bower_components' --dirsfirst "$@" | less -FRNX;
}

# searches for PID
function psg { ps -awwwx | grep -i $1 | grep -v grep; }

# searches jars for a specified entry
function grepjar { find . -type f -name '*.jar' -exec grep -i -H $1 \{\} \; ; }

# Open emacs in a new window
function emacs { /Applications/Emacs.app/Contents/MacOS/Emacs -rv $@ &}

# Open man page in Preview
function manp() {
	man -t "${1}" | open -f -a /Applications/Preview.app/
}

# Kill all instances of a process
function pskill()
{
	sudo kill -9 `ps -awwwx | grep -i $1 | grep -v grep | awk '{ print $1 }'`
}

function dbash { docker exec -i -t $1 /bin/bash; }


run-client ()
{
    if [[ $1 == "-L" ]]; then
        shift;
    else
        eval $(aws ecr get-login --no-include-email | sed "s|https://.*|https://docker.oaganalytics.com|");
    fi;
    local img=docker.oaganalytics.com/wf-client:${1:-release};
    _setup_app_container $img;
    docker run --rm -it -p 3500:3500 --name wf-client --network oag-dev-net $img
}

function _setup_app_container() {
  local img=${1}

  if [[ $(docker network ls -f name=oag-dev-net | wc -l) -lt 2 ]]; then
    docker network create oag-dev-net
  fi

  docker pull $img
}
